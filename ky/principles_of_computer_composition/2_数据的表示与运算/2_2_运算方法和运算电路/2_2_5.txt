01  B
02  D
03  C
04  B
05  C   x   D
06  D
07  C
08  C
09  C
10  A
11  C
12  B
13  B
14  D
15  C
16  B
17  A
18  B
19  C
20  D
21  A   x   B 
22  C   x   A
23  C
24  A
25  D
26  B
27  A
28  C
29  C
30  B
31  C   x   A 
32  A   x   B

201
    A = -1001 = -9  B = -0101 = -5
    A原 = 1000 1001  B原 = 1000 0101
    A补 = 1111 0111  B补 = 1111 1011 (-B)补 = 0000 0101
    [A+B]补 = A补 + B补 = 1111 0010
    [A-B]补 = A补 + (-B)补 = 1111 1100

202
    1)  2^31 + 4
        4000 0002H
        2^30 + 2
        0000 0008
        8
    2)  4 - 2^31
        C000 0002H
        2 - 2^30
        0000 0008H
        8   x 溢出

203
    1)
        A:1011 1100
        B:1011 0000
    2)
        C:0110 1100
        OF = 1 
        SF = 0
    3)
        D:0001 1100
        OF = 0
        SF = 0

204
    1)
        R1:86H
        R5:90H
        R6:7CH
    2)
        m:-122
        k1:-16
    3)
        可以
        有符号:     (A+B)补 = A补 + B补
                    (A-B)补 = A补 + (-B)补
        无符号:
                A+B  
                A-B
    4)
        有符号数都是通过补码形式存储和运算的，减法可以变成加法运算，当两个符号为都为 0 的运算符号位结果为 1 则溢出
                                                          当两个符号为都为 1 的运算符号位结果为 0 则溢出
        int m = x;
        int n = y;
        int k2 = m+n;

205
    1) 逻辑移位和算术移位分别对应无符号数和有符号数的乘法
        乘法可以由移位和加法实现
    2)
        控制部件进行加法和移位，循环次数
    3)
        在 a) 情况下执行时间最长，在 c) 情况下执行时间最短
        时钟周期
    4) 无符号数: 0000 0000 ffff fffe
       有符号数: 0000 0000 ffff fffe
       umul() 未溢出
       imul() 溢出
       n+1 位值相同，则不溢出，否则，则溢出
