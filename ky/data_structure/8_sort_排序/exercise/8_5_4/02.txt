201
    503,    87, 512,    61, 908,    170,    897,    275,    653,    462         10组
        87,503      61,512      170,908         275,897         462,653         5组
            61,87,503,512           170,275,897,908     462,653                 3组
                61,87,170,275,503,512,897,908           462,653                 2组
                    61,87,170,275,462,503,512,653,897,908                       1

202
    {12, 2, 16, 30, 28, 10, 16*, 20, 6, 18}

    0   1   2   3   4   5   6   7   8   9
    30      12              16      28
    10      2               16*     18
    20                      6       

    {30, 10, 20, 12, 2, 16, 16*, 6, 28, 18}
    0   1   2   3   4   5   6   7   8   9
    2   10  20  30
    6   12  28
        16
        16*
        18
    {2, 6, 10, 12, 16, 16*, 18, 20, 28, 30}

    不进行关键字比较

203
    1)
        a[] = {25, -10, 25, 10, 11, 19}

        b[] = {-10, 10, 11, 19, 25, 25}

    2)
        n-1+n-2+...+1+0=(1+n-1)*(n-1)/2=n(n-1)/2

    3)
        不是稳定算法
        void cmpCountSort(int a[], int b[], int n)
        {
            int i, j, *count;
            count = (int *)malloc(sizeof(int)*n);
            
            for(i = 0; i < n; i++)
                count[i] = 0;
            for(i = n-1; i > 0; i--)
            {
                for(j = i-1; j >= 0; j--)
                {
                    if(a[i] < a[j])
                        count[j]++;
                    else
                        count[i]++;
                }
            }

            for(i = n-1; i >= 0; i--)
                b[count[i]] = a[i];
            free(count);
        }